warning: variable does not need to be mutable
  --> chronos-core/src/lib.rs:71:13
   |
71 |         let mut vm = VirtualMachine::new();
   |             ----^^
   |             |
   |             help: remove this `mut`
   |
   = note: `#[warn(unused_mut)]` on by default

warning: field `core_lib` is never read
  --> chronos-core/src/lib.rs:62:5
   |
60 | pub struct ChronosCore {
   |            ----------- field in this struct
61 |     vm: VirtualMachine,
62 |     core_lib: CoreLibrary,
   |     ^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: method `into_chronos_error` is never used
   --> chronos-core/src/error.rs:410:8
    |
409 | pub trait IntoChronosError<T> {
    |           ---------------- method in this trait
410 |     fn into_chronos_error(self) -> Result<T>;
    |        ^^^^^^^^^^^^^^^^^^

warning: `chronos-core` (lib) generated 3 warnings (run `cargo fix --lib -p chronos-core` to apply 1 suggestion)
    Finished `dev` profile [unoptimized + debuginfo] target(s) in 0.03s
     Running `target/debug/chronos-repl`
════════════════════════════════════════════════════════════
                      C∀O (Kao) v0.1.0                      
════════════════════════════════════════════════════════════

ℹ Categorical ∀xiomatic Ordinal Programming Language
ℹ Enhanced Interactive REPL

ℹ Type '.help' for available commands, '.quit' to exit

C∀O> Error: Core language error: Runtime error: Unknown word: (
C∀O> C∀O> Error: Core language error: Runtime error: Unknown word: (
C∀O> C∀O> C∀O> C∀O> C∀O> C∀O> C∀O> C∀O> Error: Core language error: Runtime error: Unknown word: (
C∀O> C∀O> Error: Core language error: Runtime error: Unknown word: (
C∀O> C∀O> Welcome to the Chronos (C∀O) Programming Language!
C∀O> ====================================================
C∀O> C∀O> C∀O is a revolutionary concatenative programming language
C∀O> that combines Category Theory, Ordinal Analysis, and
C∀O> stack-based computing for provably correct software.
C∀O> C∀O> C∀O> Error: Core language error: Runtime error: Unknown word: (
C∀O> Error: Core language error: Runtime error: Unknown word: (
C∀O> Error: Core language error: Runtime error: Unknown word: (
C∀O> C∀O> === Language Fundamentals ===
C∀O> C∀O> • Concatenative (postfix) syntax: operations follow operands
C∀O> • Stack-based execution model
C∀O> • Strong type system with inference
C∀O> • Mathematical foundations in Category Theory
C∀O> • Guaranteed termination through Ordinal Analysis
C∀O> C∀O> C∀O> C∀O> Basic arithmetic example:
C∀O>   2 3 +     (pushes 2, then 3, then adds: result is 5)
C∀O> C∀O> Result:
C∀O> [0] 
[1] 
[2] 
[3] 
[4] 5
C∀O> Stack cleared
C∀O> C∀O> Stack manipulation example:
C∀O>   1 2 3 dup swap     (duplicate top, then swap)
C∀O> C∀O> Result:
C∀O> [0] 1
[1] 2
[2] 3
[3] 3
C∀O> Stack cleared
C∀O> C∀O> Error: Core language error: Runtime error: Unknown word: (
C∀O> C∀O> Error: Core language error: Runtime error: Unknown word: (
C∀O> C∀O> === Core Language Elements ===
C∀O> C∀O> Comments:
C∀O>   ( This is a comment in parentheses )
C∀O> C∀O> Word Definition:
C∀O>   :: square ( Nat -> Nat ) ;    -- type signature
C∀O>   : square dup * ;              -- implementation
C∀O> C∀O> Core Types:
C∀O>   • Unit     - terminal object ()
C∀O>   • Bool     - true, false
C∀O>   • Nat      - 0, 1, 2, 3, ...
C∀O>   • Quote    - [ code blocks ]
C∀O>   • Custom   - user-defined types
C∀O> C∀O> C∀O> C∀O> Error: Core language error: Runtime error: Unknown word: ::
C∀O> Error: Core language error: Runtime error: Unknown word: :
C∀O> C∀O> Defined 'demo_square' function. Testing with 7:
C∀O> Error: Core language error: Runtime error: Unknown word: demo_square
C∀O> [0] 
[1] 
[2] 
[3] 
[4] 7
C∀O> Stack cleared
C∀O> C∀O> Error: Core language error: Runtime error: Unknown word: (
C∀O> C∀O> Error: Core language error: Runtime error: Unknown word: (
C∀O> C∀O> === Available Example Files ===
C∀O> C∀O> 01_basic_arithmetic.cao
C∀O>   • Basic arithmetic operations (+, -, *)
C∀O>   • Stack manipulation (dup, drop, swap, over, rot)
C∀O>   • Simple word definitions
C∀O>   • Stack inspection commands
C∀O>   • Fundamental C∀O concepts
C∀O> C∀O> 02_conditionals.cao
C∀O>   • Boolean values and operations
C∀O>   • Conditional execution with 'if'
C∀O>   • Comparison operators (=, <, >)
C∀O>   • Recursive function definitions
C∀O>   • Control flow patterns
C∀O> C∀O> 03_algorithms.cao
C∀O>   • Mathematical sequences (Fibonacci, factorial)
C∀O>   • Number theory algorithms (GCD, prime testing)
C∀O>   • Recursive and iterative patterns
C∀O>   • Performance considerations
C∀O>   • Complex algorithmic examples
C∀O> C∀O> 04_data_types.cao
C∀O>   • Custom type definitions
C∀O>   • Algebraic data types
C∀O>   • Option/Result patterns
C∀O>   • Composite data structures
C∀O>   • Type validation and checking
C∀O> C∀O> 05_repl_features.cao
C∀O>   • Interactive REPL commands
C∀O>   • Debugging and tracing
C∀O>   • Session management
C∀O>   • Performance monitoring
C∀O>   • Configuration options
C∀O> C∀O> 06_real_world_app.cao
C∀O>   • Complete scientific calculator
C∀O>   • Unit conversion system
C∀O>   • Financial calculations
C∀O>   • Physics and engineering formulas
C∀O>   • Practical application patterns
C∀O> C∀O> C∀O> Error: Core language error: Runtime error: Unknown word: (
C∀O> C∀O> Error: Core language error: Runtime error: Unknown word: (
C∀O> C∀O> === Quick Start Tutorial ===
C∀O> C∀O> 1. Basic Stack Operations:
C∀O>    Try: 1 2 3 .s
C∀O> C∀O> [0] 
[1] 
[2] 
[3] 
[4] 
[5] 
[6] 
[7] 
[8] 1
[9] 2
[10] 3
C∀O> Stack cleared
C∀O> C∀O> 2. Simple Arithmetic:
C∀O>    Try: 5 7 + 2 *
C∀O> C∀O> [0] 24
C∀O> Stack cleared
C∀O> C∀O> 3. Word Definition:
C∀O>    Try defining your own function:
C∀O> Error: Core language error: Runtime error: Unknown word: ::
C∀O> Error: Core language error: Runtime error: Unknown word: :
C∀O>    Defined 'triple'. Testing: 4 triple
C∀O> Error: Core language error: Runtime error: Unknown word: triple
C∀O> [0] 4
C∀O> Stack cleared
C∀O> C∀O> 4. Conditional Logic:
C∀O>    Try: 5 3 > [ 'bigger' ] [ 'smaller' ] if
C∀O> C∀O> Error: Core language error: Runtime error: Invalid operation: Cannot execute token: QuoteStart
C∀O> [0] true
C∀O> Stack cleared
C∀O> C∀O> Error: Core language error: Runtime error: Unknown word: (
C∀O> C∀O> Error: Core language error: Runtime error: Unknown word: (
C∀O> C∀O> === Essential REPL Commands ===
C∀O> C∀O> Stack Operations:
C∀O>   .s          - show stack contents
C∀O>   .clear      - clear the stack
C∀O>   .depth      - show stack depth
C∀O> C∀O> Word Management:
C∀O>   .words      - list all defined words
C∀O>   .types      - list all defined types
C∀O>   .show word  - show word definition
C∀O> C∀O> Debugging:
C∀O>   .trace on   - enable execution tracing
C∀O>   .debug on   - enable debug mode
C∀O>   .help       - show help information
C∀O> C∀O> Session Management:
C∀O>   .save file  - save current session
C∀O>   .load file  - load saved session
C∀O>   .reset      - reset to initial state
C∀O> C∀O> C∀O> Error: Core language error: Runtime error: Unknown word: (
C∀O> C∀O> Error: Core language error: Runtime error: Unknown word: (
C∀O> C∀O> === Recommended Learning Path ===
C∀O> C∀O> Beginner (Start Here):
C∀O>   1. Run: 01_basic_arithmetic.cao
C∀O>   2. Experiment with stack operations
C∀O>   3. Define simple functions
C∀O>   4. Practice with .s and .clear commands
C∀O> C∀O> Intermediate:
C∀O>   1. Run: 02_conditionals.cao
C∀O>   2. Learn control flow patterns
C∀O>   3. Run: 04_data_types.cao
C∀O>   4. Understand type system
C∀O> C∀O> Advanced:
C∀O>   1. Run: 03_algorithms.cao
C∀O>   2. Study recursive patterns
C∀O>   3. Run: 05_repl_features.cao
C∀O>   4. Master debugging tools
C∀O> C∀O> Expert:
C∀O>   1. Run: 06_real_world_app.cao
C∀O>   2. Build your own applications
C∀O>   3. Contribute to the language ecosystem
C∀O>   4. Explore ordinal verification concepts
C∀O> C∀O> C∀O> Error: Core language error: Runtime error: Unknown word: (
C∀O> C∀O> Error: Core language error: Runtime error: Unknown word: (
C∀O> C∀O> === Language Philosophy ===
C∀O> C∀O> Mathematical Foundations:
C∀O>   • Every program has a mathematical proof of correctness
C∀O>   • Type safety guaranteed by category theory
C∀O>   • Termination ensured by ordinal analysis
C∀O> C∀O> Evolutionary Design:
C∀O>   • Language grows through community verification
C∀O>   • New definitions must pass rigorous proof requirements
C∀O>   • Collaborative development of the core library
C∀O> C∀O> Interactive Development:
C∀O>   • Immediate feedback on every operation
C∀O>   • Bottom-up program construction
C∀O>   • Compositional thinking encouraged
C∀O> C∀O> C∀O> Error: Core language error: Runtime error: Unknown word: (
C∀O> C∀O> Error: Core language error: Runtime error: Unknown word: (
C∀O> C∀O> === Common C∀O Patterns ===
C∀O> C∀O> Stack Juggling:
C∀O>   dup          - duplicate top element
C∀O>   swap         - exchange top two elements
C∀O>   rot          - rotate top three elements
C∀O>   over         - copy second to top
C∀O> C∀O> Conditional Patterns:
C∀O>   condition [ true-branch ] [ false-branch ] if
C∀O> C∀O> Recursive Patterns:
C∀O>   : factorial dup 1 = [ ] [ dup 1 - factorial * ] if ;
C∀O> C∀O> Type-Safe Patterns:
C∀O>   :: function_name ( input_types -> output_types ) ;
C∀O>   : function_name implementation ;
C∀O> C∀O> C∀O> Error: Core language error: Runtime error: Unknown word: (
C∀O> C∀O> Error: Core language error: Runtime error: Unknown word: (
C∀O> C∀O> === Tips for Learning C∀O ===
C∀O> C∀O> 1. Think in terms of data flow on a stack
C∀O> 2. Start with simple operations and build complexity
C∀O> 3. Use .s frequently to visualize the stack
C∀O> 4. Practice stack manipulation until it becomes natural
C∀O> 5. Always provide type signatures for clarity
C∀O> 6. Test functions interactively before saving
C∀O> 7. Use tracing to understand execution flow
C∀O> 8. Save your work frequently with .save
C∀O> C∀O> C∀O> Error: Core language error: Runtime error: Unknown word: (
C∀O> Error: Core language error: Runtime error: Unknown word: (
C∀O> Error: Core language error: Runtime error: Unknown word: (
C∀O> C∀O> === Ready to Start! ===
C∀O> C∀O> To begin learning C∀O:
C∀O> C∀O> 1. Start with: cargo run --bin chronos-repl < examples/01_basic_arithmetic.cao
C∀O> 2. Then explore the other example files in order
C∀O> 3. Experiment interactively in the REPL
C∀O> 4. Join the community and contribute!
C∀O> C∀O> Happy coding in Chronos!
C∀O> C∀O> C∀O> Error: Core language error: Runtime error: Unknown word: (
C∀O> Error: Core language error: Runtime error: Unknown word: (
C∀O> Error: Core language error: Runtime error: Unknown word: (
C∀O> C∀O> === Quick Interactive Demo ===
C∀O> C∀O> C∀O> C∀O> Error: Core language error: Runtime error: Unknown word: ::
C∀O> Error: Core language error: Runtime error: Unknown word: :
C∀O> C∀O> Error: Core language error: Runtime error: Unknown word: ::
C∀O> Error: Core language error: Runtime error: Unknown word: :
C∀O> C∀O> Error: Core language error: Runtime error: Unknown word: ::
C∀O> Error: Core language error: Runtime error: Unknown word: :
C∀O> C∀O> Defined helper functions: double, square, average
C∀O> Try them out:
C∀O>   • 5 double
C∀O>   • 6 square
C∀O>   • 10 20 average
C∀O> C∀O> C∀O> Current stack is ready for experimentation!
C∀O> Use .help for more commands
C∀O> Use .words to see all available functions
C∀O> C∀O> C∀O> Welcome to the world of Chronos programming!
C∀O> C∀O> Farewell! May your axioms remain consistent.
